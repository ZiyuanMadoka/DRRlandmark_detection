pch=20,xlim = c(xlim1, xlim2),ylim = c(ylim1, ylim2))
title(xlabs_t[ii])
}
plot.new()
lgds <-c("Plan1","Plan2","Plan3","Plan4","Plan5","Plan6","Plan7","Plan8","Plan9","Plan10","Plan11","Plan12")
legend(x="center",inset=0,legend=lgds,pch=19,col =colbar,
title=paste("The references",sep=" "))
return(TRUE)
}
relvsabsTcc <- function(Metrics, RMetrics){
layout(matrix(c(1,2,3,4,5,6,7,8,9,9,9,9),3,4,byrow=TRUE),widths=c(1,1,1,1),heights=c(2,2,1))
xlabs_t<-c("Heart",expression('Lung'['L']),expression('Lung'['R']),
"Liver","Spleen",
expression('Kidney'['L']),expression('Kidney'['R']),
"Spinal cord")
colbar=rainbow_hcl(12)
colors <- colbar[Metrics$Plan]
xlim1 = round(min(Metrics[,1:8],na.rm=TRUE))
xlim2 = round(max(Metrics[,1:8],na.rm=TRUE))
ylim1 = round(100*min(RMetrics[,1:8],na.rm=TRUE))
ylim2 = round(100*max(RMetrics[,1:8],na.rm=TRUE))
xlabtemp = "Absolute reference dose (Gy)"
for (ii in 1:8){
plot(Metrics[,ii], 100*RMetrics[,ii], ylab = "Relative deviation (%)", xlab= xlabtemp, col=colors,
pch=20,xlim = c(xlim1, xlim2),ylim = c(ylim1, ylim2))
title(xlabs_t[ii])
}
plot.new()
lgds <-c("Plan1","Plan2","Plan3","Plan4","Plan5","Plan6","Plan7","Plan8","Plan9","Plan10","Plan11","Plan12")
legend(x="center",inset=0,legend=lgds,pch=19,col =colbar,
horiz = TRUE,
title=paste("The references",sep=" "))
return(TRUE)
}
relvsabsMean(RefMean,RDevMean)
relvsabsMean(RefMean,RDevMean)
relvsabsTcc(RefTcc,RDevtcc)
DevMean
DevTcc
RefTcc
listM
Metrics_for_30
drawBeebox <-function(Metrics,AdjMetrics,mt_name){
xlabs_t<-c("Heart",expression('Lung'['L']),expression('Lung'['R']),
"Liver","Spleen",
expression('Kidney'['L']),expression('Kidney'['R']),
"Spinal cord")
if(mt_name!="D2cc"){
OARidx = c(4,5,6,7,8)
ylabtitle <-expression(paste('Dev'['mean']," (%)",sep=" "))
#ylabtitle <-expression(paste('Dev'['mean']," cGy",sep=" "))
}else{
OARidx=1:8
ylabtitle <-expression(paste('Dev'['2cc']," (%)",sep=" "))
#ylabtitle <-expression(paste('Dev'['2cc']," cGy",sep=" "))
}
xlabs <-xlabs_t[OARidx]
vlow = -600#-1400
vhigh = 600 #1400
#layout(matrix(c(1,2,3,3),2,2,byrow=FALSE),widths=c(6,1),heights=c(1,1))
colbar=rainbow_hcl(12)
colors <- colbar[Metrics$Plan]
subMetrics <-Metrics[,OARidx]
colorsl <- rep(colors,ncol(subMetrics))
colors2 <-rainbow_hcl(12)[AdjMetrics$Plan]
subAdjMetrics <- AdjMetrics[,OARidx]
colorsa <- rep(colors2,ncol(subAdjMetrics))
lgds <-c("Plan1","Plan2","Plan3","Plan4","Plan5","Plan6","Plan7","Plan8","Plan9","Plan10","Plan11","Plan12")
par(mai=c(0.3,0.6,0.3,0.2),mgp=c(2,0.8,0),cex.lab=1, cex.axis=1)
boxplot(subMetrics*100,outline=FALSE,varwidth=TRUE,main="S1",names=NA,ylab=ylabtitle,ylim=c(vlow,vhigh))
mtext(xlabs,side=1,line=0,at=1:length(xlabs),padj=1,cex=0.8)
beeswarm(subMetrics*100,pch=20,pwcol=colorsl,corral="random",cex = 0.7,add=TRUE)
abline(h=(seq(vlow,vhigh,40)), col="lightgray", lty="dotted")
abline(v=(seq(1,length(OARidx),1)), col="lightgray", lty="dotted")
boxplot(subAdjMetrics*100,outline=FALSE, varwidth=TRUE,main="S2",names=NA,ylim=c(vlow,vhigh),ylab=ylabtitle)
mtext(xlabs,side=1,line=0,at=1:length(xlabs),padj=1,cex=0.8)
beeswarm(subAdjMetrics*100,pch=20,pwcol=colorsa,corral="random",cex = 0.7,add=TRUE)
abline(h=(seq(vlow,vhigh,40)), col="lightgray", lty="dotted")
abline(v=(seq(1,length(OARidx),1)), col="lightgray", lty="dotted")
#par(mai=c(0,0,0,0))
#plot.new()
#legend(x="left",inset=0,legend=lgds,pch=19,col =colbar,title=paste("The references",sep=" "))
return(TRUE)
}
colbar=rainbow_hcl(12)
lgds <-c("Plan1","Plan2","Plan3","Plan4","Plan5","Plan6","Plan7",
"Plan8","Plan9","Plan10","Plan11","Plan12")
layout(matrix(c(1,2,3,4,5,6,6,6,6,6),5,2,byrow=FALSE),widths=c(6,1),heights=c(9,9,2,9,9))
drawBeebox(DevMean,AdjDevmean,"Dmean")
par(mai=c(0,0,0,0))
plot.new()
drawBeebox(DevTcc,AdjDevtcc,"D2cc")
par(mai=c(0,0,0,0))
plot.new()
legend(x="center",inset=0,legend=lgds,pch=19,col =colbar,
title=paste("The references",sep=" "))
drawBeebox <-function(Metrics,AdjMetrics,mt_name){
xlabs_t<-c("Heart",expression('Lung'['L']),expression('Lung'['R']),
"Liver","Spleen",
expression('Kidney'['L']),expression('Kidney'['R']),
"Spinal cord")
if(mt_name!="D2cc"){
OARidx = c(4,5,6,7,8)
ylabtitle <-expression(paste('Dev'['mean']," (%)",sep=" "))
#ylabtitle <-expression(paste('Dev'['mean']," cGy",sep=" "))
}else{
OARidx=1:8
ylabtitle <-expression(paste('Dev'['2cc']," (%)",sep=" "))
#ylabtitle <-expression(paste('Dev'['2cc']," cGy",sep=" "))
}
xlabs <-xlabs_t[OARidx]
vlow = -600#-1400
vhigh = 600 #1400
#layout(matrix(c(1,2,3,3),2,2,byrow=FALSE),widths=c(6,1),heights=c(1,1))
colbar=rainbow_hcl(12)
colors <- colbar[Metrics$Plan]
subMetrics <-Metrics[,OARidx]
colorsl <- rep(colors,ncol(subMetrics))
colors2 <-rainbow_hcl(12)[AdjMetrics$Plan]
subAdjMetrics <- AdjMetrics[,OARidx]
colorsa <- rep(colors2,ncol(subAdjMetrics))
lgds <-c("Plan1","Plan2","Plan3","Plan4","Plan5","Plan6","Plan7","Plan8","Plan9","Plan10","Plan11","Plan12")
par(mai=c(0.3,0.6,0.3,0.2),mgp=c(2,0.8,0),cex.lab=1, cex.axis=1)
boxplot(subMetrics*100,outline=FALSE,varwidth=TRUE,main="S1",names=NA,ylab=ylabtitle,ylim=c(vlow,vhigh))
mtext(xlabs,side=1,line=0,at=1:length(xlabs),padj=1,cex=0.8)
beeswarm(subMetrics*100,pch=20,pwcol=colorsl,corral="random",cex = 0.7,add=TRUE)
abline(h=(seq(vlow,vhigh,100)), col="lightgray", lty="dotted")
abline(v=(seq(1,length(OARidx),1)), col="lightgray", lty="dotted")
boxplot(subAdjMetrics*100,outline=FALSE, varwidth=TRUE,main="S2",names=NA,ylim=c(vlow,vhigh),ylab=ylabtitle)
mtext(xlabs,side=1,line=0,at=1:length(xlabs),padj=1,cex=0.8)
beeswarm(subAdjMetrics*100,pch=20,pwcol=colorsa,corral="random",cex = 0.7,add=TRUE)
abline(h=(seq(vlow,vhigh,100)), col="lightgray", lty="dotted")
abline(v=(seq(1,length(OARidx),1)), col="lightgray", lty="dotted")
#par(mai=c(0,0,0,0))
#plot.new()
#legend(x="left",inset=0,legend=lgds,pch=19,col =colbar,title=paste("The references",sep=" "))
return(TRUE)
}
colbar=rainbow_hcl(12)
lgds <-c("Plan1","Plan2","Plan3","Plan4","Plan5","Plan6","Plan7",
"Plan8","Plan9","Plan10","Plan11","Plan12")
layout(matrix(c(1,2,3,4,5,6,6,6,6,6),5,2,byrow=FALSE),widths=c(6,1),heights=c(9,9,2,9,9))
drawBeebox(DevMean,AdjDevmean,"Dmean")
par(mai=c(0,0,0,0))
plot.new()
drawBeebox(DevTcc,AdjDevtcc,"D2cc")
par(mai=c(0,0,0,0))
plot.new()
legend(x="center",inset=0,legend=lgds,pch=19,col =colbar,
title=paste("The references",sep=" "))
load("/media/ziyuan/datashare/study2017/R_related/DVH_LF.RData")
Dose_for_Ano11_11
Dose_for_Ano11_11[4]
Dose_for_Ano11_11[4]$volumes
Dose_for_Ano11_11[3]$volumes
Dose_for_Ano11_11[8]$volumes
OAR <- c ("Kidney_R","Liver","Spinal_cordT10S1", "Spleen")  # only right/left kidney
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
refPat
pat1 = refPat[1]
pat1
pathInit <-paste("../../grouping/references",pat1,sep="/");
pathInit
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
pathPatients
pat2 = pathPatients[1]
pat2
ref_p =refPat[1]
ref_p
trasPatients<- list.files(ref_p,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
trasPatients
OAR <- c ("Kidney_R","Liver","Spinal_cordT10S1", "Spleen")  # only right/left kidney
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
pat1
pathInit <-paste("../../grouping/references",pat1,sep="/");
pathInit
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
pat2
str1 <- paste("elastix -f ../pDRR",pat1,".mhd",sep="")
str1
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat1
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str1
strout <- paste(pathInit,pat2,sep="/")
strout
strout1 <- paste(pathInit,pat2,"AffineT",sep="/")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
strout
OAR <- c ("Kidney_R","Liver","Spinal_cordT10S1", "Spleen")  # only right/left kidney
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("../../grouping/references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
strmk
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("../../grouping/references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("grouping/references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("grouping/references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
source('/media/ziyuan/datashare/study2017/R_related/generateKR.R', echo=TRUE)
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("grouping/references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
for (OARn in OAR){
strpat1 <- paste("../../grouping",groupnum,pat1,sep="/")
strpat2 <- paste("../../grouping/references",pat1,pat2,OARn,sep="/")
findOARn1<- list.files(strpat1,pattern = OARn, all.files = FALSE, full.names = FALSE, recursive = TRUE, ignore.case = FALSE,
include.dirs = FALSE,no.. = TRUE)
findOARn2<- list.files(strpat2,pattern = OARn, all.files = FALSE, full.names = FALSE, recursive = TRUE, ignore.case = FALSE,
include.dirs = FALSE,no.. = TRUE)
if (length(findOARn1)!=0 && length(findOARn2)!=0){
strpat1OAR <- paste(strpat1,OARn,sep="/")
strpat2OAR <- paste(strpat2,OARn,sep="/")
strvtkpatOAR1 <- paste(strpat1OAR,".mhd",sep="")
strvtkpatOAR2 <- paste(strpat2OAR,".mhd",sep="")
str2 <- paste(str1,OARn,ID_pat1,ID_pat2)
str3 <- paste(str2,strvtkpatOAR1,strvtkpatOAR2,"1",sep=" ")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("grouping/references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
pat1
pat2
pathInit <-paste("grouping/references",pat1,sep="/");
pathInit
pathPatients
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
pathPatients
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f ../pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m ../pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("elastix -m pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
plan_ID_t <- c("AMC_11","AMC_42","AMC_5","AMC_8")
setwd("/media/ziyuan/datashare/study2017/OncentraDRRs/cropped_DRRs")
groupnum <-"groupKR"
filebash <-paste("bashDRRAffine_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("-m pDRR_AMC",ID_pat2,".mhd -p paraAffine.txt -out",sep="")
strout <- paste(pathInit,pat2,"AffineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
filebash <-paste("bashDRRBSpline_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("-m pDRR_AMC",ID_pat2,".mhd -p paraBSpline.txt -t0",sep="")
strT <- paste(pathInit,"AffineT","TransformParameters.0.txt",sep="/")
strout <- paste(pathInit,pat2,"BSplineT",sep="/")
str3 <- paste(str1, str2, strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
filebash <-paste("bashDRRBSpline_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("-m pDRR_AMC",ID_pat2,".mhd -p paraBSpline.txt -t0",sep="")
strT <- paste(pathInit,"AffineT","TransformParameters.0.txt",sep="/")
strout <- paste(pathInit,pat2,"BSplineT",sep="/")
str3 <- paste(str1, str2, strT, "-out", strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
filebash <-paste("bashDRRBSpline_",groupnum,".txt",sep="")
refPat = plan_ID_t
for (pat1 in refPat){
pathInit <-paste("references",pat1,sep="/");
pathPatients <-list.files(pathInit,pattern = "AMC", all.files = FALSE, full.names = FALSE, recursive = FALSE, ignore.case = FALSE,
include.dirs = FALSE, no.. = TRUE)
for (pat2 in pathPatients){
ID_pat1 <-sapply(strsplit(pat1,"_"), tail, 1)
ID_pat2 <-sapply(strsplit(pat2,"_"), tail, 1)
str1 <- paste("elastix -f pDRR_AMC",ID_pat1,".mhd",sep="")
str2 <- paste("-m pDRR_AMC",ID_pat2,".mhd -p paraBSpline.txt -t0",sep="")
strT <- paste(pathInit,pat2,"AffineT","TransformParameters.0.txt",sep="/")
strout <- paste(pathInit,pat2,"BSplineT",sep="/")
str3 <- paste(str1, str2, strT, "-out", strout,sep=" ")
strmkdir <- paste("mkdir",strout, sep= " ")
cat(strmkdir,file=filebash,append=TRUE,sep="\n")
cat(str3,file=filebash,append=TRUE,sep="\n")
print(ID_pat2)
}
}
load("/media/ziyuan/datashare/study2017/R_related/DVH_LF.RData")
Dose_for_Ano11_11
Dose_for_Ano11_11$`Body StructureSet2016`
Dose_for_Ano11_11[1]
Dose_for_Ano11_11[1]$`Body StructureSet2016`
Dose_for_Ano11_11[1]$doses
Dose_for_Ano11_11[[1]]$doses
Dose_for_Ano11_11[[1]]$names
load("/media/ziyuan/datashare/study2017/R_related/DoseMetricsLF.RData")
Metrics_for_11
load("/media/ziyuan/ICCR2016/forMarcoDVH/DVH_LF.RData")
Dose_for_Ano11_11
Dose_for_Ano11_11[[1]]
plot(Dose_for_Ano11_11[[1]])
plot(Dose_for_Ano11_11)
load("/media/ziyuan/datashare/study2017/R_related/readDVHs.R")
load("/media/ziyuan/datashare/study2017/R_related/readDVHs.R")
load("/media/ziyuan/datashare/research2016/Dose_analysis.R")
Dose_for_Ano11_11
Dose_for_Ano11_11[[1]]
Dose_for_Ano11_11[[1]]$ID
Dose_for_Ano11_11[[1]]$patietn
Dose_for_Ano11_11[[1]]$patient
Dose_for_Ano11_11[[1]]$structure.name
